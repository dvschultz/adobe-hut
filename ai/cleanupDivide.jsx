/* this script does something I WISH pathfinder did. I want to use the divide pathfinder tool, but not outline all of the shapes. it also helps clean up duplicate strokes and things *//* settings */var minDist = 10;/* script below */var thisAnchor, nextAnchor, thisDist;var storedLines = [];if ( app.documents.length > 0 && app.activeDocument.pathItems.length > 0 ) {    doc = app.activeDocument;        for (var i = doc.pathItems.length - 1; i >= 0; i-- ) {        pathRef = doc.pathItems[i];        for (var p= 0; p < pathRef.pathPoints.length; p++) {                thisAnchor = pathRef.pathPoints[p].anchor;                nextAnchor = (p!=0) ? pathRef.pathPoints[p-1].anchor : pathRef.pathPoints[pathRef.pathPoints.length - 1].anchor;                                thisDist = calcPathDist (thisAnchor[0], thisAnchor[1], nextAnchor[0], nextAnchor[1]);                if (thisDist >= minDist) {                    if(isUnique(storedLines,[thisAnchor,nextAnchor])) {                        storedLines.push([thisAnchor,nextAnchor]);                    }                }        }        pathRef.remove();    }    for(var l = 0; l < storedLines.length; l++) {        newPath = app.activeDocument.pathItems.add();        newPath.setEntirePath(storedLines[l]);    }}function calcPathDist (x1,y1,x2,y2) {    var dist = Math.sqrt( Math.pow ((x2 - x1), 2) + Math.pow ((y2 - y1), 2) );    return dist;}function isUnique(array,item) {    for(var i = 0; i < array.length; i++) {        if(item == array[i]) return false;//~         $.writeln(item[0][0] == array[i][1][0]);//~         $.writeln(item[0][1] == array[i][1][1]);//~         $.writeln(item[1][0] == array[i][0][0]);//~         $.writeln(item[1][1] == array[i][0][1]);        if(item[0][0] == array[i][1][0] && item[0][1] == array[i][1][1] && item[1][0] == array[i][0][0] && item[1][1] == array[i][0][1]) return false;    }    return true;}